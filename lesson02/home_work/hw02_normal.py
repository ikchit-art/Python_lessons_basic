def is_number(n):
    try:
        float(n)
    except ValueError:
        return False
    return True
# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

import math
import random

numList = [2, -5, 8, 9, -25, 25, 4]
newNumList = []
for i in range(0, len(numList)):
    if numList[i] > 0 and math.sqrt(numList[i]) == int(math.sqrt(numList[i])):
        newNumList.append(int(math.sqrt(numList[i])))

print('Задача-1: ', newNumList)

print()
# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

print('Задача-2:')
day = {'01': 'первое', '02': 'второе', '03': 'третье', '04': 'четвертое', '05': 'пятое',
       '06': 'шестое', '07': 'седьмое', '08': 'восьмое', '09': 'девятое', '10': 'десятое',
       '11': 'одиннадцатое', '12': 'двенадцатое', '13': 'тринадцатое', '14': 'четырнадцатое', '15': 'пятнадцатое',
       '16': 'шестнадцатое', '17': 'семнадцатое', '18': 'восемнадцатое', '19': 'девятнадцатое', '20': 'двадцатое',
       '21': 'двадцать первое', '22': 'двадцать второе', '23': 'двадцать третье', '24': 'двадцать четвертое', '25': 'двадцать пятое',
       '26': 'двадцать шестое', '27': 'двадцать седьмое', '28': 'двадцать восьмое', '29': 'двадцать девятое', '30': 'тридцатое',
       '31': 'тридцать первое'}
month = {'01': 'января', '02': 'февраля', '03': 'марта', '04': 'апреля', '05': 'мая',
         '06': 'июня', '07': 'июля', '08': 'августа', '09': 'сентября', '10': 'октября',
         '11': 'ноября', '12': 'декабря'}

#проверим разделитель "." и вводимые числа

while True:
    dataUse = input('Введите дату в формате dd.mm.yyyy: ')
    if dataUse[2] == '.' and dataUse[5] == '.' and is_number(dataUse[:2]) and is_number(dataUse[3:5]):
        if int(dataUse[:2]) < 32 or int(dataUse[:2]) > 0:
            if int(dataUse[3:5]) < 13 or int(dataUse[3:5]) > 0:
                if is_number(dataUse[6:-1]):
                    break

listData = dataUse.split('.')
print('{} {} {} года'.format(day.get(listData[0]), month.get(listData[1]), listData[2]))

print()
# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

listNum = list()
n = int(input('Введите количество элементов n   '))
for i in range(n):
    listNum.append(random.randint(-100, 101))

listNum1 = [random.randint(-100, 101) for i in range(n)]
print('Задача-3: ', listNum)
print('Задача-3: ', listNum1)

print()
# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print('Задача-4а: ')
lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = set(lst)
print(lst)
print(lst2)
print()

print('Задача-4б: ')
lst3 = list()
for i in lst:
    if lst.count(i) == 1:
        lst3.append(i)
print(lst)
print(lst3)
